local Z,G,S,V,P,U;S,G,P,Vector3.new,CFrame.new;local function dec(t)local r,c,b={},string.char,bit32.bxor;for i=1,#t do r[i]=c(b(t[i],17))end;return table.concat(r)end;local srv={dec{114,117,100,105,108,105,108,111},dec{114,117,110,115,101,114,118,105,99,101},dec{99,111,108,108,101,99,116,105,111,110,115,01,114,118,105,99,101},dec{119,111,114,114,115,112,97,99,101},dec{115,116,97,116,115},dec{108,111,99,97,108,112,108,97,121,101,114},dec{108,112,108,97,121,101,114,115},dec{104,116,116,112,115,101,114,118,105,99,101},dec{112,104,121,115,105,99,115,115,101,114,118,105,99,101}};local R,s1,s2,s3,s4,s5,s6,s7,s8=G:GetService(srv[1]),G:GetService(srv[2]),G:GetService(srv[3]),G:GetService(srv[4]),G:GetService(srv[5]),UserSettings():GetService(srv[6]),G:GetService(srv[7]),G:GetService(srv[8]),G:GetService(srv[9]);local cam,clk,ins,rem,cln,flr,inf,ex,mn,mx,clmp=s3.CurrentCamera,os.clock,table.insert,table.remove,table.clone,math.floor,math.huge,math.exp,math.min,math.max,math.clamp;local ip,pc,sp,wt,dl,cr,rs=ipairs,pcall,task.spawn,task.wait,task.delay,coroutine.create,coroutine.resume;local l_gfp=cam.GetFrustumPlanes;Z._isReady=false;Z.U={};function Z.U.iV(p,bS)local f,bP=l_gfp(cam),p.Position;for i=1,6 do local pl=f[i];local d=pl.Normal:Dot(bP)-pl.Offset;local r=bS.X*math.abs(pl.Normal.X)+bS.Y*math.abs(pl.Normal.Y)+bS.Z*math.abs(pl.Normal.Z);if d<-r then return false end end;return true end;
Z._M1={PROFS={[1]={f=80,p=55,m=1800},[2]={50,45,1100},[3]={35,30,900},[4]={25,20,500}},aggr={r=2.5,p=2.5,e=2.5,d=2.5,c=2.5,v=2.5,init=2.5},_avgFps=60,_prevFps=60,_lastCheck=0,_isCalibrated=true,_state="Normal",_cdStart=0,BASE_CD_DUR=4,BASE_REC_DUR=5,REC_FPS=55,EMG_FPS=40,_detectedMode="Mode 5 (Normal Operation)"};function Z._M1:f1(s)if self._state==s then return end;self._state=s;if s=="Emergency"then local sA=cln(self.aggr)local d=0.75;local e=0;sp(function()while e<d and self._state=="Emergency"do local a=e/d;for k,v in P(sA)do self.aggr[k]=v+(5-v)*a end;e+=s1.Heartbeat:Wait()end end);self._detectedMode="Mode 1 (Intense Events)";elseif s=="Cooldown"then self._cdStart=clk();self._detectedMode="Mode 2 (Unstable Performance)";elseif s=="Normal"then local sA,e,d=cln(self.aggr),0,mn(self.BASE_REC_DUR*1.5,mx(1,flr(self.BASE_REC_DUR*(1+(self.aggr.c-1)/5))));sp(function()while e<d and self._state=="Normal"do local a=e/d;for k,v in P(sA)do self.aggr[k]=v+(2-v)*a end;e+=s1.Heartbeat:Wait()end;end);self._detectedMode="Mode 5 (Normal Operation)";end end;function Z._M1:f2(dt)local e=ex(-dt*2.5);self._avgFps=e*self._avgFps+(1-e)*(1/dt)if not self._isCalibrated then return end;local s,af=self._state,self._avgFps;if s=="Normal"then if af<self.EMG_FPS and clk()-self._lastCheck>1.5 or af<self._prevFps*0.8 and clk()-self._lastCheck>0.75 then self:f1("Emergency")end elseif s=="Emergency"then if af>self.REC_FPS and clk()-self._lastCheck>2.5 then self:f1("Cooldown")end elseif s=="Cooldown"then if af<self.EMG_FPS and clk()-self._lastCheck>1.5 then self:f1("Emergency")elseif clk()-self._cdStart>mn(self.BASE_CD_DUR*1.5,mx(1,flr(self.BASE_CD_DUR*(1+(self.aggr.c-1)/5))))and clk()-self._lastCheck>1.5 then self:f1("Normal")end end;if #Z._newInstancesQueue>10 and af<self.EMG_FPS+5 and clk()-self._lastCheck>1.5 then self:f1("Emergency")end;self._prevFps=af;if clk()-self._lastCheck<0.25 then return end;self._lastCheck=clk();local pr,ag=self.PROFS,self.aggr;local p=pr[4];if af>pr[2][1]then p=pr[1]elseif af>pr[3][1]then p=pr[2]else p=pr[3]end;local physFps=s4:GetRealPhysicsFPS and s4:GetRealPhysicsFPS() or s4:GetPhysicsFPS(); local rs,ps,ms=af/p[1],physFps/p[2],p[3]/s4.Total.Value;local a;if self._state=="Emergency"then a=0.35 elseif self._state=="Cooldown"then a=0.2 else a=0.15 end;local nr,np,ne,nd,nc,nv,ninit=rs<0.85 and(rs<0.65 and 4 or 3)or 1,ps<0.85 and(ps<0.65 and 4 or 3)or 1,(rs<0.9 or ms<0.9)and(rs<0.75 or ms<0.75 and 4 or 3)or 1,rs<0.85 and(rs<0.7 and 4 or 3)or 1,p==pr[4]and 4 or p==pr[3]and 3 or 1,(rs<0.9 or ms<0.9)and(rs<0.75 or ms<0.75 and 4 or 3)or 1,rs<0.85 and(rs<0.7 and 4 or 3)or 1;ag.r=ag.r+(nr-ag.r)*a;ag.p=ag.p+(np-ag.p)*a;ag.e=ag.e+(ne-ag.e)*a;ag.d=ag.d+(nd-ag.d)*a;ag.c=ag.c+(nc-ag.c)*a;ag.v=ag.v+(nv-ag.v)*a;ag.init=ag.init+(ninit-ag.init)*a;if self._state=="Normal"then if ag.e>3.5 or ag.r>3.5 or ag.d>3.5 then self._detectedMode="Mode 3 (Visual Load)"elseif ag.p>3.5 or ag.c>3.5 then self._detectedMode="Mode 4 (Physics/Scripts)"else self._detectedMode="Mode 5 (Normal Operation)"end end end end;
Z._M4={_tasks={}};function Z._M4:f1(t)local c=cr(function()while true do local s,e=pc(function()t.fn(t.args or{})end)if not s then warn("Optimizer Task Error:",e)end;local baseInt=t.int;local dynamicWait=baseInt/(Z._M1.aggr[t.cat]or 1);wt(mx(0.016,dynamicWait))end end);ins(self._tasks,c)end;function Z._M4:f2()for _,c in ip(self._tasks)do rs(c)end end;
Z._M5={BASE_GRID_SIZE=300,_grid={},_tracked=setmetatable({},{__mode="k"})};function Z._M5:f1(o,d)if not(o and o.Parent and o:IsA("BasePart"))then return end;local currentGridSize=flr(self.BASE_GRID_SIZE/(1+(Z._M1.aggr.c-1)/4));local p=o.Position;local k=flr(p.X/currentGridSize).." "..flr(p.Y/currentGridSize).." "..flr(p.Z/currentGridSize);self._grid[k]=self._grid[k]or{};ins(self._grid[k],{o,p});self._tracked[o]={c=k,d=d}end;function Z._M5:f2(p,r)local res={};local currentGridSize=flr(self.BASE_GRID_SIZE/(1+(Z._M1.aggr.c-1)/4));local cR=flr(r/currentGridSize)+1;local cx,cy,cz=flr(p.X/currentGridSize),flr(p.Y/currentGridSize),flr(p.Z/currentGridSize);for i=cx-cR,cx+cR do for j=cy-cR,cy+cR do for k=cz-cR,cz+cR do local c=self._grid[i.." "..j.." "..k];if c then for _,o in ip(c)do ins(res,o[1])end end end end end;return res end;
Z._M6={DIST_SQR={[1]={3600,8100,14400,inf},[2]={2500,6400,12100,inf},[3]={1600,4900,8100,inf},[4]={900,2500,4900,inf},[5]={400,1600,3600,inf}},_culled={},_rQ={_h=1,_t=1}};function Z._M6:f1(m)if not m.PrimaryPart then return end;local p={};for _,d in ip(m:GetDescendants())do if d:IsA("BasePart")then ins(p,d)end end;local bSz=m:GetBoundingBox();Z._M5:f1(m.PrimaryPart,{LOD={p=p,m=m,lf=-1,lt=0,isC=false,bS=bSz.Size,lastVisibleTime=clk()}})m.Destroying:Connect(function()Z:removeFromAllCaches(m)end)end;function Z._M6:f2(cf,nby)local a=flr(Z._M1.aggr.r+0.5);local l,cP=clmp(a,1,5),cf.Position;local lSqr=self.DIST_SQR[l];local d_sq_cull=lSqr[3]*1.1;for _,pP in ip(nby)do local t=Z._M5._tracked[pP];if not(pP and pP.Parent and t and t.d.LOD)then continue end;local ld=t.d.LOD;if ld.isC then continue end;local isVis=Z.U.iV(pP,ld.bS);if isVis then ld.lastVisibleTime=clk()end;local dSqr=(pP.Position-cP).MagnitudeSqr;if dSqr>d_sq_cull or clk()-ld.lastVisibleTime>0.25 then if not ld.isC then ld.isC=true;ins(self._culled,{o=ld.m,p=ld.m.Parent,d=ld});ld.m.Parent=nil;if ld.m.PrimaryPart then ld.m.PrimaryPart:SetNetworkOwner(nil)end end;else local nT,nF;if dSqr<lSqr[1]then nT,nF=0,0 elseif dSqr<lSqr[2]then nT,nF=0.3,1 elseif dSqr<lSqr[3]then nT,nF=0.8,2 else nT,nF=1,3 end;if ld.lt~=nT then ld.lt=nT;for _,part in ip(ld.p)do if part and part.Parent then part.LocalTransparencyModifier=nT end end end;if ld.lf~=nF then ld.lf=nF;local rf=Enum.RenderFidelity.FromValue(nF);for _,part in ip(ld.p)do if part and part.Parent then part.RenderFidelity=rf end end end end end end;function Z._M6:f3(cf)local a=flr(Z._M1.aggr.r+0.5);local l=clmp(a,1,5);local dSqr=self.DIST_SQR[l][3];for i=#self._culled,1,-1 do local cE=self._culled[i];local pP=cE.o and cE.o.PrimaryPart;if not pP then rem(self._culled,i);continue end;if(pP.Position-cf.Position).MagnitudeSqr<dSqr*0.85 and Z.U.iV(pP,cE.d.bS)then local q=self._rQ;q[q._t]=cE;q._t+=1;rem(self._culled,i)end end end;function Z._M6:f4()local q=self._rQ;local maxProcess=flr(mx(1,5*(Z._M1._avgFps/60)));while q._h<q._t and maxProcess>0 do local r=q[q._h];q[q._h]=nil;q._h+=1;if r and r.o and r.p and not r.o.Parent then r.o.Parent=r.p;if r.o.PrimaryPart then r.o.PrimaryPart:SetNetworkOwner(s6.LocalPlayer)end;if r.d then r.d.isC=false;r.d.lastVisibleTime=clk();local d=r.d;for _,pt in ip(d.p)do if pt and pt.Parent then pt.LocalTransparencyModifier=d.lt or 0 end end end;end;maxProcess-=1;end;if q._h>20 then local newQ={_h=1,_t=1};for i=q._h,q._t-1 do newQ[newQ._t]=q[i];newQ._t+=1 end;self._rQ=newQ end end;
Z._M7={DIST_SQR={[1]=inf,[2]=40000,[3]=22500,[4]=4900,[5]=900},SLEEP_VEL=0.15,_tracked={},_activeInterpolators=setmetatable({},{__mode="k"})};function Z._M7:f1(m)if not m.PrimaryPart then return end;local p={};for _,d in ip(m:GetDescendants())do if d:IsA("BasePart")and not d.Anchored then ins(p,d)end end;if #p>0 then local entry={p=p,lastV={},lastAV={}};Z._M5:f1(m.PrimaryPart,{Physics=entry});self._tracked[m]=entry;m.Destroying:Connect(function()Z:removeFromAllCaches(m)end)end end;function Z._M7:f2(cP,nby)local a=flr(Z._M1.aggr.p+0.5);local l=clmp(a,1,5);local dSqr=self.DIST_SQR[l];local optGrp,defGrp=s8:GetCollisionGroupId("Optimizer_Physics"),s8:GetCollisionGroupId("Default");local maxProcess=flr(mx(2,8*(Z._M1._avgFps/60)));local pCount=0;for _,pP in ip(nby)do if pCount>=maxProcess then break end;local t=Z._M5._tracked[pP];if not(pP and pP.Parent and t and t.d.Physics)then continue end;local isSleeping=pP.AssemblyLinearVelocity.Magnitude<self.SLEEP_VEL and pP.AssemblyAngularVelocity.Magnitude<self.SLEEP_VEL;local sA=(pP.Position-cP).MagnitudeSqr>dSqr or isSleeping or s2:HasTag(pP,"ManagedBullet");local entry=t.d.Physics;for _,p in ip(entry.p)do if p and p.Parent then local targetGrp=sA and optGrp or defGrp;if p.CollisionGroupId~=targetGrp then p.CollisionGroupId=targetGrp;if sA then p:SetNetworkOwner(nil);p.CanCollide=false;p.CanTouch=false;else p.CanCollide=true;p.CanTouch=true;p:SetNetworkOwner(s6.LocalPlayer)end end end end;pCount+=1;end end;
Z._M8={DIST_CULL={[1]=400,[2]=250,[3]=120,[4]=50,[5]=25},_effects={}};function Z._M8:f1(i)local aP=i:IsA("BasePart")and i or i:FindFirstAncestorWhichIsA("Model")and i:FindFirstAncestorWhichIsA("Model").PrimaryPart;local function pE(e)local d={e=e,a=aP,o={}};if e:IsA("ParticleEmitter")then d.o.Rate=e.Rate elseif e:IsA("Light")then d.o.Brightness=e.Brightness;d.o.Enabled=e.Enabled elseif e:IsA("Beam")or e:IsA("Trail")then d.o.Enabled=e.Enabled elseif e:IsA("Highlight")then d.o.Enabled=e.Enabled elseif e:IsA("PostEffect")then d.o.Enabled=e.Enabled;if e:IsA("Atmosphere")then d.o.Density=e.Density elseif e:IsA("Clouds")then d.o.Cover=e.Cover elseif e:IsA("BloomEffect")then d.o.Intensity=e.Intensity elseif e:IsA("ColorCorrectionEffect")then d.o.Saturation=e.Saturation elseif e:IsA("SunRaysEffect")then d.o.Intensity=e.Intensity elseif e:IsA("BlurEffect")then d.o.Size=e.Size end end;ins(self._effects,d)e.Destroying:Connect(function()Z:removeFromAllCaches(e)end)end;if i:IsA("ParticleEmitter")or i:IsA("Light")or i:IsA("Beam")or i:IsA("Trail")or i:IsA("Highlight")or i:IsA("PostEffect")then pE(i)else for _,d in ip(i:GetDescendants())do if d:IsA("ParticleEmitter")or d:IsA("Light")or d:IsA("Beam")or d:IsA("Trail")or d:IsA("Highlight")or d:IsA("PostEffect")then pE(d)end end end end;function Z._M8:f3(cf)local a=flr(Z._M1.aggr.e+0.5);local l=clmp(a,1,5);local cD_sq=self.DIST_CULL[l]*self.DIST_CULL[l];local cP=cf.Position;local aggrV=Z._M1.aggr.v;for i=#self._effects,1,-1 do local d=self._effects[i];if not d or not d.e or not d.e.Parent then rem(self._effects,i);continue end;local e,aP=d.e,d.a;local isGlobal=e:IsA("PostEffect");if isGlobal then local targetEnabled=(aggrV<4.5);if e.Enabled~=targetEnabled then e.Enabled=targetEnabled end;local scale=mx(0,1-((aggrV-1)/4));if e:IsA("Atmosphere")then e.Density=d.o.Density*scale elseif e:IsA("Clouds")then e.Cover=d.o.Cover*scale elseif e:IsA("BloomEffect")then e.Intensity=d.o.Intensity*scale elseif e:IsA("ColorCorrectionEffect")then e.Saturation=d.o.Saturation*scale elseif e:IsA("SunRaysEffect")then e.Intensity=d.o.Intensity*scale elseif e:IsA("BlurEffect")then e.Size=d.o.Size*scale end;else if not aP or not aP.Parent then rem(self._effects,i);continue end;local dSqr=(aP.Position-cP).MagnitudeSqr;local targetEnabled=Z.U.iV(aP,aP.Size)and dSqr<cD_sq;if e:IsA("ParticleEmitter")then e.Enabled=targetEnabled elseif e:IsA("Light")then e.Enabled=targetEnabled elseif e:IsA("Beam")then e.Enabled=targetEnabled elseif e:IsA("Trail")then e.Enabled=targetEnabled elseif e:IsA("Highlight")then e.Enabled=targetEnabled end end end end;
Z._M9={CULL_PCNT={[1]=0.1,[2]=0.4,[3]=0.7,[4]=0.85,[5]=0.95},DIST_START=200,_culled={},_clutter={},_unCullQueue={}};function Z._M9:f1(i)local pP=i:IsA("Model")and i.PrimaryPart or(i:IsA("BasePart")and i);if pP then local cD={i=i,pP=pP,isC=false,lastVisibleTime=clk()};ins(self._clutter,cD);Z._M5:f1(pP,{Clutter=cD})i.Destroying:Connect(function()Z:removeFromAllCaches(i)end)end end;function Z._M9:f2(cP)local a=flr(Z._M1.aggr.d+0.5);local l=clmp(a,1,5);local cPcnt=self.CULL_PCNT[l];if cPcnt==0 then self:f4()return end;local cDist=self.DIST_START*(1+(Z._M1.aggr.d-1)/3);local pTC={};local nC=Z._M5:f2(cP,cDist*2);for _,pP in ip(nC)do if pP and pP.Parent then local tD=Z._M5._tracked[pP];if tD and tD.d and tD.d.Clutter then local cD=tD.d.Clutter;if not cD.isC and(pP.Position-cP).Magnitude>cDist then ins(pTC,cD)end end end end;local maxProcess=flr(mx(2,10*(Z._M1._avgFps/60)));local pCount=0;for i=1,flr(#pTC*cPcnt)do if pCount>=maxProcess then break end;local cD=pTC[i];if cD and not cD.isC then cD.isC=true;ins(self._culled,{o=cD.i,p=cD.i.Parent,d=cD});cD.i.Parent=nil;if cD.pP then cD.pP:SetNetworkOwner(nil)end;pCount+=1 end end;end;function Z._M9:f3(cP)local a=flr(Z._M1.aggr.d+0.5);local l=clmp(a,1,5);local cDist=self.DIST_START*(1+(Z._M1.aggr.d-1)/3);local maxProcess=flr(mx(2,10*(Z._M1._avgFps/60)));local pCount=0;for i=#self._culled,1,-1 do if pCount>=maxProcess then break end;local e=self._culled[i];if not e or not e.o or not e.o.PrimaryPart then rem(self._culled,i);continue end;if(e.d.pP.Position-cP).Magnitude<cDist*0.9 then local q=self._unCullQueue;q[#q+1]=e;rem(self._culled,i)end;pCount+=1 end end;function Z._M9:f4()local q=self._unCullQueue;local maxProcess=flr(mx(2,8*(Z._M1._avgFps/60)));while #q>0 and maxProcess>0 do local e=rem(q,1);if e and e.o and e.p and not e.o.Parent then e.d.isC=false;e.d.lastVisibleTime=clk();e.o.Parent=e.p;if e.d.pP then e.d.pP:SetNetworkOwner(s6.LocalPlayer)end end;maxProcess-=1 end end;
Z._memoryManager={_lastGCStep=0,MEM_THRESHOLD_HIGH=500,MEM_THRESHOLD_LOW=350,_mem_usage=0};function Z._memoryManager:checkMemory()self._mem_usage=collectgarbage("count")end;function Z._memoryManager:gcStep()local fps=Z._M1._avgFps;if fps<Z._M1.EMG_FPS then return end;local step_size=75;if self._mem_usage>self.MEM_THRESHOLD_HIGH then step_size=250 elseif self._mem_usage<self.MEM_THRESHOLD_LOW then return end;collectgarbage("step",step_size)end;Z._newInstancesQueue={};function Z:processNewInstancesQueue()local maxProcess=flr(mx(2,12*(Z._M1._avgFps/60)));local pCount=0;while #self._newInstancesQueue>0 and pCount<maxProcess do local i=rem(self._newInstancesQueue,1);if i and i.Parent then if s2:HasTag(i,"ManagedRender")then Z._M6:f1(i)end;if s2:HasTag(i,"ManagedPhysics")then Z._M7:f1(i)end;if s2:HasTag(i,"ManagedEffect")then Z._M8:f1(i)end;if s2:HasTag(i,"Clutter")then Z._M9:f1(i)end;pCount+=1 end end end;Z._M14={_cacheList={},_currentCacheIndex=1,_currentEntryIndex=1,CLEAN_BATCH_SIZE=10};Z._M14._cacheList={Z._M6._culled,Z._M8._effects,Z._M9._culled,Z._M9._clutter,Z._M5._tracked,Z._M7._tracked};function Z:removeFromAllCaches(instance)for i=1,#Z._M14._cacheList do local cache=Z._M14._cacheList[i];if i==6 or i==7 then if cache[instance]then cache[instance]=nil end else for j=#cache,1,-1 do local entry=cache[j];local iToCheck;if i==1 or i==3 then iToCheck=entry and entry.o elseif i==2 then iToCheck=entry and entry.e elseif i==4 then iToCheck=entry and entry.i elseif i==5 then iToCheck=j end;if iToCheck==instance then rem(cache,j)end end end end;if Z._M5._tracked[instance]then Z._M5._tracked[instance]=nil end end;Z._clientInterpolator={_trackedObjects=setmetatable({},{__mode="k"})};function Z._clientInterpolator:track(instance)if not instance or self._trackedObjects[instance]then return end;self._trackedObjects[instance]={instance=instance,serverCF=instance.CFrame,clientCF=instance.CFrame,lastUpdate=clk()};instance:GetPropertyChangedSignal("CFrame"):Connect(function()if self._trackedObjects[instance]then self._trackedObjects[instance].serverCF=instance.CFrame;self._trackedObjects[instance].lastUpdate=clk()end end);instance.AncestryChanged:Connect(function(_,p)if not p then self._trackedObjects[instance]=nil end end)end;function Z._clientInterpolator:update()local cTime=clk();local aggrP=Z._M1.aggr.p;local duration=mx(0.05,0.2-aggrP*0.025);for instance,data in P(self._trackedObjects)do if not instance or not instance.Parent then self._trackedObjects[instance]=nil;continue end;local sCF,lCF=data.serverCF,data.clientCF;local alpha=clmp((cTime-data.lastUpdate)/duration,0,1);instance.CFrame=lCF:Lerp(sCF,alpha);data.clientCF=instance.CFrame end end;
Z.Activate=function()local tags={"ManagedRender","ManagedPhysics","ManagedEffect","Clutter"};s8:CreateCollisionGroup("Optimizer_Physics");s8:CollisionGroupSetCollidable("Optimizer_Physics","Default",false);for _,t in ip(tags)do for _,i in ip(s2:GetTagged(t))do ins(Z._newInstancesQueue,i)end;s2:GetInstanceAddedSignal(t):Connect(function(i)ins(Z._newInstancesQueue,i)end)end;local lighting=G:GetService("Lighting");local function trackLighting(child)if child:IsA("PostEffect")then Z._M8.f1(Z._M8,child)end end;for _,child in ip(lighting:GetChildren())do trackLighting(child)end;lighting.ChildAdded:Connect(trackLighting);s6.PlayerAdded:Connect(function(player)if player==s6.LocalPlayer then return end;player.CharacterAdded:Connect(function(char)local hrp=char:WaitForChild("HumanoidRootPart",5);if hrp then Z._clientInterpolator:track(hrp)end end)end);for _,player in ip(s6:GetPlayers())do if player~=s6.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart")then Z._clientInterpolator:track(player.Character.HumanoidRootPart)end end;task.delay(1,function()Z._isReady=true end);Z._M4:f1({fn=function()Z._M1:f2(s1.Heartbeat:Wait())end,int=0,cat="c"});Z._M4:f1({fn=function()if not Z._isReady then return end;local cf=cam.CFrame;local cP=cf.Position;local r=2000/(1+(Z._M1.aggr.r-1)/4);local nby=Z._M5:f2(cP,r);if #nby>0 then Z._M6.f2(Z._M6,cf,nby);Z._M7.f2(Z._M7,cP,nby)end;Z._M8.f3(Z._M8,cf);Z._M9.f2(Z._M9,cP);Z._clientInterpolator:update()end,int=0.1,cat="c"});Z._M4:f1({fn=function()if not Z._isReady then return end;local cf=cam.CFrame;Z._M6.f3(Z._M6,cf);Z._M9.f3(Z._M9,cf.Position)end,int=0.15,cat="r"});Z._M4:f1({fn=function()if not Z._isReady then return end;Z._M6.f4(Z._M6);Z._M9.f4(Z._M9)end,int=0.05,cat="r"});Z._M4:f1({fn=function()Z:processNewInstancesQueue()end,int=0.05,cat="init"});Z._M4:f1({fn=function()Z._memoryManager:checkMemory()end,int=4,cat="c"});Z._M4:f1({fn=function()Z._memoryManager:gcStep()end,int=0.03,cat="c"});Z._M4:f2()end;Z:Activate()
